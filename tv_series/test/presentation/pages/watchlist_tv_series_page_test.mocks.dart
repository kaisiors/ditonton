// Mocks generated by Mockito 5.3.2 from annotations
// in tv_series/test/presentation/pages/watchlist_tv_series_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:flutter_bloc/flutter_bloc.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_series/domain/entities/tv_series_detail.dart' as _i8;
import 'package:tv_series/domain/usecases/get_watchlist_tv_series.dart' as _i2;
import 'package:tv_series/domain/usecases/get_watchlist_tv_series_status.dart'
    as _i3;
import 'package:tv_series/domain/usecases/remove_watchlist_tv_series.dart'
    as _i5;
import 'package:tv_series/domain/usecases/save_watchlist_tv_series.dart' as _i4;
import 'package:tv_series/presentation/bloc/watchlist/watchlist_cubit.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetWatchlistTvSeries_0 extends _i1.SmartFake
    implements _i2.GetWatchlistTvSeries {
  _FakeGetWatchlistTvSeries_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListTvSeriesStatus_1 extends _i1.SmartFake
    implements _i3.GetWatchListTvSeriesStatus {
  _FakeGetWatchListTvSeriesStatus_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTvSeries_2 extends _i1.SmartFake
    implements _i4.SaveWatchlistTvSeries {
  _FakeSaveWatchlistTvSeries_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTvSeries_3 extends _i1.SmartFake
    implements _i5.RemoveWatchlistTvSeries {
  _FakeRemoveWatchlistTvSeries_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWatchlistTvSeriesState_4 extends _i1.SmartFake
    implements _i6.WatchlistTvSeriesState {
  _FakeWatchlistTvSeriesState_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WatchlistTvSeriesCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistTvSeriesCubit extends _i1.Mock
    implements _i6.WatchlistTvSeriesCubit {
  @override
  _i2.GetWatchlistTvSeries get getWatchlistTvSeries => (super.noSuchMethod(
        Invocation.getter(#getWatchlistTvSeries),
        returnValue: _FakeGetWatchlistTvSeries_0(
          this,
          Invocation.getter(#getWatchlistTvSeries),
        ),
        returnValueForMissingStub: _FakeGetWatchlistTvSeries_0(
          this,
          Invocation.getter(#getWatchlistTvSeries),
        ),
      ) as _i2.GetWatchlistTvSeries);
  @override
  _i3.GetWatchListTvSeriesStatus get getWatchListStatus => (super.noSuchMethod(
        Invocation.getter(#getWatchListStatus),
        returnValue: _FakeGetWatchListTvSeriesStatus_1(
          this,
          Invocation.getter(#getWatchListStatus),
        ),
        returnValueForMissingStub: _FakeGetWatchListTvSeriesStatus_1(
          this,
          Invocation.getter(#getWatchListStatus),
        ),
      ) as _i3.GetWatchListTvSeriesStatus);
  @override
  _i4.SaveWatchlistTvSeries get saveWatchlist => (super.noSuchMethod(
        Invocation.getter(#saveWatchlist),
        returnValue: _FakeSaveWatchlistTvSeries_2(
          this,
          Invocation.getter(#saveWatchlist),
        ),
        returnValueForMissingStub: _FakeSaveWatchlistTvSeries_2(
          this,
          Invocation.getter(#saveWatchlist),
        ),
      ) as _i4.SaveWatchlistTvSeries);
  @override
  _i5.RemoveWatchlistTvSeries get removeWatchlist => (super.noSuchMethod(
        Invocation.getter(#removeWatchlist),
        returnValue: _FakeRemoveWatchlistTvSeries_3(
          this,
          Invocation.getter(#removeWatchlist),
        ),
        returnValueForMissingStub: _FakeRemoveWatchlistTvSeries_3(
          this,
          Invocation.getter(#removeWatchlist),
        ),
      ) as _i5.RemoveWatchlistTvSeries);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set message(String? _message) => super.noSuchMethod(
        Invocation.setter(
          #message,
          _message,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.WatchlistTvSeriesState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeWatchlistTvSeriesState_4(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeWatchlistTvSeriesState_4(
          this,
          Invocation.getter(#state),
        ),
      ) as _i6.WatchlistTvSeriesState);
  @override
  _i7.Stream<_i6.WatchlistTvSeriesState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i7.Stream<_i6.WatchlistTvSeriesState>.empty(),
        returnValueForMissingStub:
            _i7.Stream<_i6.WatchlistTvSeriesState>.empty(),
      ) as _i7.Stream<_i6.WatchlistTvSeriesState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i7.Future<void> getDataWatchlist() => (super.noSuchMethod(
        Invocation.method(
          #getDataWatchlist,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> getStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getStatus,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> addToWatchlist(_i8.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToWatchlist,
          [tvSeries],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> removeFromWatchlist(_i8.TvSeriesDetail? tvSeries) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlist,
          [tvSeries],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void emit(_i6.WatchlistTvSeriesState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i9.Change<_i6.WatchlistTvSeriesState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
